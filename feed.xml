<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kukisama.github.io/</id><title>不太皮的九叔</title><subtitle>自豪的使用Github Page作为博客</subtitle> <updated>2022-08-24T16:14:47+08:00</updated> <author> <name>不太皮的九叔</name> <uri>https://kukisama.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://kukisama.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://kukisama.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 不太皮的九叔 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>AzureStack HCI的成本精算</title><link href="https://kukisama.github.io/Cheapest_HCI/" rel="alternate" type="text/html" title="AzureStack HCI的成本精算" /><published>2022-08-24T00:00:00+08:00</published> <updated>2022-08-24T16:14:23+08:00</updated> <id>https://kukisama.github.io/Cheapest_HCI/</id> <content src="https://kukisama.github.io/Cheapest_HCI/" /> <author> <name>不太皮的九叔</name> </author> <category term="Azure Stack HCI" /> <category term="规划" /> <summary> 不是一个人，而是很多朋友在了解HCI产品后，会觉得AzureStack HCI的价格很高，难落地。 有时候感觉是不太准的，所以我们来详细818 Azure Stack HCI的计费方式，以及这个东西的影响。为了详细的分析，这个事情要分两个方面讨论 跟谁比 怎么用 通过计算，我也希望找到触碰到Azure Statck HCI 底线的配置。底线顾名思义，就是到头了，不能再省钱了，再省钱就影响功能了。 Azure Stack HCI的计费方式 超融合基础架构（Hyper-converged infrastructure，缩写为HCI）是SDX（软件定义一切）时期的附加产物，其特点是计算、存储、网络的提供能力是等比、线性提升的，什么意思？拿挖矿来类比，就是1个节点算力为1，两个节点就是2，没有损耗。简单并且易于使用。用户可以根据实际需求，往群集增加节点，来实现整体群... </summary> </entry> <entry><title>Jekyll模板升级笔记</title><link href="https://kukisama.github.io/JekyllfastStart/" rel="alternate" type="text/html" title="Jekyll模板升级笔记" /><published>2022-08-19T00:00:00+08:00</published> <updated>2022-08-19T15:11:28+08:00</updated> <id>https://kukisama.github.io/JekyllfastStart/</id> <content src="https://kukisama.github.io/JekyllfastStart/" /> <author> <name>不太皮的九叔</name> </author> <category term="Jekyll" /> <category term="初级知识" /> <summary> Jekyll 是什么 我的博客是托管在Github Pages上的，使用了一种叫做Jekyll的技术构建。最近由于系统邮件一直告诉我有安全漏洞，需要升级，所以我到处找合适的升级模板。 个人理解，Jekyll 基于Ruby开发的，一种和Github Pages 组合使用的代码生成器。能够将markdown格式的文档，生成为html的静态网页。它的特性或者说是适用场景是明确的： MarkDown格式作为输入，最终转换成HTML 部署在Github Pages 不支持动态技术（ASP/PHP） 安装Jekyll 为了能够升级和调试现有的Jekyll，需要在本地部署它的构造环境。这个事情只需要做一次，所以可以在虚拟机中进行。 由于我已经部署过kukisama.github.io这个库，也配置过自定义域名这些，对在Github中的操作不做过多叙述。 另外我是在... </summary> </entry> <entry><title>WireShark快速多端点数据捕获</title><link href="https://kukisama.github.io/WireSharkFastStart/" rel="alternate" type="text/html" title="WireShark快速多端点数据捕获" /><published>2022-08-17T00:00:00+08:00</published> <updated>2022-08-18T15:21:21+08:00</updated> <id>https://kukisama.github.io/WireSharkFastStart/</id> <content src="https://kukisama.github.io/WireSharkFastStart/" /> <author> <name>不太皮的九叔</name> </author> <summary> 需求 一般来说，用命令行抓包是因为有以下需求 有很多机器需要同一个时间点抓包 频繁登录到不同主机去启动WireShark比较麻烦 将抓好的数据包拷贝到公共路径还需要花时间，还比如打包之类，这种操作很繁琐。 所以如果只有1、2台机器需要抓包，简单的图形化工具也可以完成。也就没必要了解命令行下的操作。 当然还有另外一个场景： 张三告诉李四，需要李四去抓包 李四不会 张三写脚本，方便李四的部署实施。 李四跑脚本 获取，以及随身携带 WirekShark是免费软件，主要用来抓数据包，然后分析网络数据包。官方提供了非安装的版本，直接下载Portable版本即可。和安装版相比，两者只是在内容组织上有所差异，实际没有没有任何差异。 WireShark命令行工具 实际上WireShark的纯命令行工具是TShark，这个是dumpcap的外壳... </summary> </entry> <entry><title>【谈资】微软MVP，凭什么？</title><link href="https://kukisama.github.io/WhatISMSMVP/" rel="alternate" type="text/html" title="【谈资】微软MVP，凭什么？" /><published>2022-08-17T00:00:00+08:00</published> <updated>2022-08-17T00:00:00+08:00</updated> <id>https://kukisama.github.io/WhatISMSMVP/</id> <content src="https://kukisama.github.io/WhatISMSMVP/" /> <author> <name>不太皮的九叔</name> </author> <summary> 这是一个818系列，没有任何技术细节，单纯就是讲故事，故事保真。一个含蓄但又低调有力的逼需要挖掘历史的真相才能得到。 利益相关：历任3届微软MVP 什么是微软MVP 由微软正式员工或在任MVP推荐，经由微软的审核与选拔，获选者（非微软员工）才得由微软授予的奖励活动。最早会追朔到1993年。到2003年的时候，才开始往全球发展，所以最多的能拿到的连任杯，到今年是20年。 那它是干什么的呢？它是鼓励“热衷与社区分享知识的技术专家”，在中国这种人俗称自来水。也就是不用付费的水军，主动给厂商做舔狗。既然只是一个水军的代称，为什么还有这么多人去抢这个Title，想要加入到这里呢？ 站着挣钱 时间往前十年，大厂还没有那么卷，也不是人人都在搞钱，所以单纯搞技术不会被歧视。总有人想要改变这种现状，现在来看，最搞钱的莫过于做销售，但是以前不是所有人都能看得清。那这种情况下怎么搞钱，有一条路... </summary> </entry> <entry><title>随便聊聊:如何硬气的打补丁不重启</title><link href="https://kukisama.github.io/How_abloud_hotfix_update_windows_server_2022/" rel="alternate" type="text/html" title="随便聊聊:如何硬气的打补丁不重启" /><published>2022-02-23T00:00:00+08:00</published> <updated>2022-08-18T15:21:21+08:00</updated> <id>https://kukisama.github.io/How_abloud_hotfix_update_windows_server_2022/</id> <content src="https://kukisama.github.io/How_abloud_hotfix_update_windows_server_2022/" /> <author> <name>不太皮的九叔</name> </author> <summary> 随便聊聊:为什么打补丁要重启 引子 我有一个朋友，因为最近微软出了很多漏洞修复补丁，导致需要频繁的打补丁。在打补丁重启之后，有些机器出现了蓝屏等等一些奇怪的问题。所以问题来了，为什么给Windows打补丁要重启，不重启行不行。 结论 先说结论，不重启大部分情况下是没问题的。但是不建议 需要重启的理由 动态链接库 在分析原因之前，需要先聊一下，为什么需要重启。在聊重启之前，又要聊一下Windows的动态链接库 (DLL) 。 动态链接库相当于组成乐高的不同砖块。有些是铺在底下的砖头，如果要更换这些砖头，就需要把这块砖上关联的东西都铲了（停止），才能更换。比如要拆除下图左下角的砖，换一个别的颜色。除了把整个风车拆除，别无她法。 对于Windows，操作系统的很多功能都由 DLL 提供。 此外，当您在这些操作系统中的一个Windows程序时，该程序的很多功能可能... </summary> </entry> </feed>
